version: "3.7"

services:
  teamcity:
    container_name: teamcity
    image: jetbrains/teamcity-server:2024.07.2
    restart: unless-stopped
    depends_on:
      - db-teamcity
    ports:
      - ${APP_PORT}:8111
    user: "1000:1000"
    # dns:
    #   - ${DNS_IP}
    volumes:
      - ${APP_DATA_DIR}/data/datadir:/data/teamcity_server/datadir
      - ${APP_DATA_DIR}/data/logs:/opt/teamcity/logs
    environment:
      - POSTGRES_PASSWORD=teamcity
      - POSTGRES_USER=teamcity
      - POSTGRES_DATABASE=teamcity
      - POSTGRES_PORT=5432
      - POSTGRES_HOST=db-teamcity
    networks:
      - tipi_main_network
    labels:
      # Main
      traefik.enable: true
      traefik.http.middlewares.teamcity-web-redirect.redirectscheme.scheme: https
      traefik.http.services.teamcity.loadbalancer.passhostheader: true
      traefik.http.services.teamcity.loadbalancer.server.port: 8111
      # Web
      traefik.http.routers.teamcity-insecure.rule: Host(`${APP_DOMAIN}`)
      traefik.http.routers.teamcity-insecure.entrypoints: web
      traefik.http.routers.teamcity-insecure.service: teamcity
      traefik.http.routers.teamcity-insecure.middlewares: teamcity-web-redirect
      # Websecure
      traefik.http.routers.teamcity.rule: Host(`${APP_DOMAIN}`)
      traefik.http.routers.teamcity.entrypoints: websecure
      traefik.http.routers.teamcity.service: teamcity
      traefik.http.routers.teamcity.tls.certresolver: myresolver
      # Local domain
      traefik.http.routers.teamcity-local-insecure.rule: Host(`teamcity.${LOCAL_DOMAIN}`)
      traefik.http.routers.teamcity-local-insecure.entrypoints: web
      traefik.http.routers.teamcity-local-insecure.service: teamcity
      traefik.http.routers.teamcity-local-insecure.middlewares: teamcity-web-redirect
      # Local domain secure
      traefik.http.routers.teamcity-local.rule: Host(`teamcity.${LOCAL_DOMAIN}`)
      traefik.http.routers.teamcity-local.entrypoints: websecure
      traefik.http.routers.teamcity-local.service: teamcity
      traefik.http.routers.teamcity-local.tls: true

  db-teamcity:
    container_name: db-teamcity
    image: postgres:14.2
    volumes:
      - ${APP_DATA_DIR}/data/postgres:/var/lib/postgresql/data
    restart: unless-stopped
    environment:
      - POSTGRES_PASSWORD=teamcity
      - POSTGRES_USER=teamcity
      - POSTGRES_DB=teamcity
    networks:
      - tipi_main_network
